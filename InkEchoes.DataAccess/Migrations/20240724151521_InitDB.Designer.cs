// <auto-generated />
using InkEchoes.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InkEchoes.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240724151521_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InkEchoes.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Nacionality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuthorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Nacionality = "England",
                            Name = "J. K. Rowling"
                        },
                        new
                        {
                            AuthorId = 2,
                            Nacionality = "British India",
                            Name = "George Orwell"
                        },
                        new
                        {
                            AuthorId = 3,
                            Nacionality = "South Africa",
                            Name = "J. R. R. Tolkien"
                        },
                        new
                        {
                            AuthorId = 4,
                            Nacionality = "U.S.A",
                            Name = "Harper Lee"
                        },
                        new
                        {
                            AuthorId = 5,
                            Nacionality = "U.S.A",
                            Name = "F. Scott Fitzgerald"
                        },
                        new
                        {
                            AuthorId = 6,
                            Nacionality = "England",
                            Name = "Jane Austen"
                        },
                        new
                        {
                            AuthorId = 7,
                            Nacionality = "Australia",
                            Name = "Markus Zusak"
                        },
                        new
                        {
                            AuthorId = 8,
                            Nacionality = "U.S.A",
                            Name = "Ernest Hemingway"
                        },
                        new
                        {
                            AuthorId = 9,
                            Nacionality = "Colombia",
                            Name = "Gabriel García Márquez"
                        },
                        new
                        {
                            AuthorId = 10,
                            Nacionality = "Nigeria",
                            Name = "Chimamanda Ngozi Adichie"
                        },
                        new
                        {
                            AuthorId = 11,
                            Nacionality = "England",
                            Name = "Terry Pratchett"
                        },
                        new
                        {
                            AuthorId = 12,
                            Nacionality = "England",
                            Name = "Neil Gaiman"
                        },
                        new
                        {
                            AuthorId = 13,
                            Nacionality = "Sweden",
                            Name = "Stieg Larsson"
                        },
                        new
                        {
                            AuthorId = 14,
                            Nacionality = "U.S.A",
                            Name = "Frank Herbert"
                        },
                        new
                        {
                            AuthorId = 15,
                            Nacionality = "U.S.A",
                            Name = "Dan Brown"
                        },
                        new
                        {
                            AuthorId = 16,
                            Nacionality = "Israel",
                            Name = "Yuval Noah Harari"
                        },
                        new
                        {
                            AuthorId = 17,
                            Nacionality = "U.S.A",
                            Name = "Walter Isaacson"
                        },
                        new
                        {
                            AuthorId = 18,
                            Nacionality = "U.S.A",
                            Name = "Stephen King"
                        },
                        new
                        {
                            AuthorId = 19,
                            Nacionality = "U.S.A",
                            Name = "Charles Duhigg"
                        },
                        new
                        {
                            AuthorId = 20,
                            Nacionality = "U.S.A",
                            Name = "Gillian Flynn"
                        });
                });

            modelBuilder.Entity("InkEchoes.Models.Book", b =>
                {
                    b.Property<string>("BookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberPages")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111",
                            Description = "A young boy discovers he is a wizard on his 11th birthday.",
                            Editorial = "Scholastic",
                            ISBN = "978-0439708180",
                            NumberPages = 320,
                            Origin = "United Kingdom",
                            Price = 19m,
                            Title = "Harry Potter and the Sorcerer's Stone"
                        },
                        new
                        {
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8",
                            Description = "A dystopian novel set in a totalitarian society under constant surveillance.",
                            Editorial = "Signet Classic",
                            ISBN = "978-0451524935",
                            NumberPages = 328,
                            Origin = "United Kingdom",
                            Price = 99m,
                            Title = "1984"
                        },
                        new
                        {
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6",
                            Description = "The adventure of Bilbo Baggins as he goes on a quest to reclaim a treasure.",
                            Editorial = "Del Rey",
                            ISBN = "978-0345339683",
                            NumberPages = 320,
                            Origin = "United Kingdom",
                            Price = 89m,
                            Title = "The Hobbit"
                        },
                        new
                        {
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55",
                            Description = "A novel about the serious issues of rape and racial inequality.",
                            Editorial = "Harper Perennial Modern Classics",
                            ISBN = "978-0060935467",
                            NumberPages = 336,
                            Origin = "United States",
                            Price = 149m,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c",
                            Description = "A novel about the American dream and the Roaring Twenties.",
                            Editorial = "Scribner",
                            ISBN = "978-0743273565",
                            NumberPages = 180,
                            Origin = "United States",
                            Price = 109m,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b",
                            Description = "A romantic novel that also critiques the British landed gentry.",
                            Editorial = "CreateSpace Independent Publishing Platform",
                            ISBN = "978-1503290563",
                            NumberPages = 278,
                            Origin = "United Kingdom",
                            Price = 79m,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c",
                            Description = "A story narrated by Death, about a young girl's life in Nazi Germany.",
                            Editorial = "Knopf Books for Young Readers",
                            ISBN = "978-0375842207",
                            NumberPages = 552,
                            Origin = "Australia",
                            Price = 129m,
                            Title = "The Book Thief"
                        },
                        new
                        {
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc",
                            Description = "The story of an aging fisherman and his struggle with a giant marlin.",
                            Editorial = "Scribner",
                            ISBN = "978-0684830490",
                            NumberPages = 128,
                            Origin = "United States",
                            Price = 89m,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39",
                            Description = "The multi-generational story of the Buendía family in the town of Macondo.",
                            Editorial = "Harper Perennial Modern Classics",
                            ISBN = "978-0060883287",
                            NumberPages = 417,
                            Origin = "Colombia",
                            Price = 189m,
                            Title = "One Hundred Years of Solitude"
                        },
                        new
                        {
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09",
                            Description = "A novel about the Nigerian Civil War through the perspectives of three characters.",
                            Editorial = "Anchor",
                            ISBN = "978-1400095209",
                            NumberPages = 560,
                            Origin = "Nigeria",
                            Price = 169m,
                            Title = "Half of a Yellow Sun"
                        },
                        new
                        {
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e",
                            Description = "The story of an angel and a demon who team up to prevent the apocalypse.",
                            Editorial = "HarperTorch",
                            ISBN = "978-0060853983",
                            NumberPages = 432,
                            Origin = "United Kingdom",
                            Price = 14m,
                            Title = "Good Omens: The Nice and Accurate Prophecies of Agnes Nutter, Witch"
                        },
                        new
                        {
                            BookId = "0e89473b-ab23-43d8-b887-0936f1108413",
                            Description = "A journalist and a hacker team up to solve a decades-old disappearance.",
                            Editorial = "Vintage Crime/Black Lizard",
                            ISBN = "978-0307454546",
                            NumberPages = 465,
                            Origin = "Sweden",
                            Price = 159m,
                            Title = "The Girl with the Dragon Tattoo"
                        },
                        new
                        {
                            BookId = "03a9b093-fcbd-4c71-8d4c-8e68307884b8",
                            Description = "A complex tale of politics, religion, and ecology on the desert planet Arrakis.",
                            Editorial = "Ace",
                            ISBN = "978-0441013593",
                            NumberPages = 896,
                            Origin = "United States",
                            Price = 179m,
                            Title = "Dune"
                        },
                        new
                        {
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840",
                            Description = "A symbologist uncovers a secret society while investigating a murder at the Louvre.",
                            Editorial = "Anchor",
                            ISBN = "978-0307474278",
                            NumberPages = 689,
                            Origin = "United States",
                            Price = 149m,
                            Title = "The Da Vinci Code"
                        },
                        new
                        {
                            BookId = "f94aec15-cd4b-448f-9c57-01fa09d08ac4",
                            Description = "An exploration of the history and impact of Homo sapiens on the world.",
                            Editorial = "Harper",
                            ISBN = "978-0062316097",
                            NumberPages = 498,
                            Origin = "Israel",
                            Price = 185m,
                            Title = "Sapiens: A Brief History of Humankind"
                        },
                        new
                        {
                            BookId = "f105484e-5f4b-4a9e-b659-b99cdc4ef2ba",
                            Description = "The biography of Steve Jobs, detailing his life and career as a tech visionary.",
                            Editorial = "Simon & Schuster",
                            ISBN = "978-1451648539",
                            NumberPages = 656,
                            Origin = "United States",
                            Price = 179m,
                            Title = "Steve Jobs"
                        },
                        new
                        {
                            BookId = "afe2affa-c3a6-42d6-97ae-ae2bb32f6252",
                            Description = "A family becomes isolated in a haunted hotel during the winter.",
                            Editorial = "Anchor",
                            ISBN = "978-0307743657",
                            NumberPages = 688,
                            Origin = "United States",
                            Price = 149m,
                            Title = "The Shining"
                        },
                        new
                        {
                            BookId = "ba599047-7bf3-43b5-b878-0443392a092d",
                            Description = "An exploration of the science behind why habits exist and how they can be changed.",
                            Editorial = "Random House",
                            ISBN = "978-0812981605",
                            NumberPages = 371,
                            Origin = "United States",
                            Price = 169m,
                            Title = "The Power of Habit: Why We Do What We Do in Life and Business"
                        },
                        new
                        {
                            BookId = "cb1c497b-2822-4154-a876-23678c6406f2",
                            Description = "A thriller about a man suspected of causing his wife's disappearance.",
                            Editorial = "Crown Publishing Group",
                            ISBN = "978-0307588371",
                            NumberPages = 432,
                            Origin = "United States",
                            Price = 15m,
                            Title = "Gone Girl"
                        });
                });

            modelBuilder.Entity("InkEchoes.Models.BookCategory", b =>
                {
                    b.Property<int>("BookCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookCategoryId"));

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BookCategoryId");

                    b.HasIndex("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BooksCategories");

                    b.HasData(
                        new
                        {
                            BookCategoryId = 1,
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111",
                            CategoryId = 2
                        },
                        new
                        {
                            BookCategoryId = 2,
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111",
                            CategoryId = 7
                        },
                        new
                        {
                            BookCategoryId = 3,
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 4,
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111",
                            CategoryId = 13
                        },
                        new
                        {
                            BookCategoryId = 5,
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8",
                            CategoryId = 20
                        },
                        new
                        {
                            BookCategoryId = 6,
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8",
                            CategoryId = 1
                        },
                        new
                        {
                            BookCategoryId = 7,
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 8,
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 9,
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6",
                            CategoryId = 2
                        },
                        new
                        {
                            BookCategoryId = 10,
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6",
                            CategoryId = 7
                        },
                        new
                        {
                            BookCategoryId = 11,
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 12,
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 13,
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 14,
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55",
                            CategoryId = 18
                        },
                        new
                        {
                            BookCategoryId = 15,
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 16,
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 17,
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 18,
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c",
                            CategoryId = 21
                        },
                        new
                        {
                            BookCategoryId = 19,
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 20,
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 21,
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b",
                            CategoryId = 4
                        },
                        new
                        {
                            BookCategoryId = 22,
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 23,
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 24,
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 25,
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c",
                            CategoryId = 18
                        },
                        new
                        {
                            BookCategoryId = 26,
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 27,
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 28,
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c",
                            CategoryId = 13
                        },
                        new
                        {
                            BookCategoryId = 29,
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc",
                            CategoryId = 7
                        },
                        new
                        {
                            BookCategoryId = 30,
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 31,
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 32,
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 33,
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39",
                            CategoryId = 11
                        },
                        new
                        {
                            BookCategoryId = 34,
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39",
                            CategoryId = 18
                        },
                        new
                        {
                            BookCategoryId = 35,
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 36,
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39",
                            CategoryId = 14
                        },
                        new
                        {
                            BookCategoryId = 37,
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09",
                            CategoryId = 18
                        },
                        new
                        {
                            BookCategoryId = 38,
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09",
                            CategoryId = 15
                        },
                        new
                        {
                            BookCategoryId = 39,
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09",
                            CategoryId = 12
                        },
                        new
                        {
                            BookCategoryId = 40,
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09",
                            CategoryId = 22
                        },
                        new
                        {
                            BookCategoryId = 41,
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e",
                            CategoryId = 9
                        },
                        new
                        {
                            BookCategoryId = 42,
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e",
                            CategoryId = 2
                        },
                        new
                        {
                            BookCategoryId = 43,
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e",
                            CategoryId = 16
                        },
                        new
                        {
                            BookCategoryId = 44,
                            BookId = "0e89473b-ab23-43d8-b887-0936f1108413",
                            CategoryId = 5
                        },
                        new
                        {
                            BookCategoryId = 45,
                            BookId = "03a9b093-fcbd-4c71-8d4c-8e68307884b8",
                            CategoryId = 1
                        },
                        new
                        {
                            BookCategoryId = 46,
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840",
                            CategoryId = 3
                        },
                        new
                        {
                            BookCategoryId = 47,
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840",
                            CategoryId = 23
                        },
                        new
                        {
                            BookCategoryId = 48,
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840",
                            CategoryId = 24
                        },
                        new
                        {
                            BookCategoryId = 49,
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840",
                            CategoryId = 5
                        },
                        new
                        {
                            BookCategoryId = 50,
                            BookId = "f94aec15-cd4b-448f-9c57-01fa09d08ac4",
                            CategoryId = 6
                        },
                        new
                        {
                            BookCategoryId = 51,
                            BookId = "f105484e-5f4b-4a9e-b659-b99cdc4ef2ba",
                            CategoryId = 8
                        },
                        new
                        {
                            BookCategoryId = 52,
                            BookId = "afe2affa-c3a6-42d6-97ae-ae2bb32f6252",
                            CategoryId = 9
                        },
                        new
                        {
                            BookCategoryId = 53,
                            BookId = "afe2affa-c3a6-42d6-97ae-ae2bb32f6252",
                            CategoryId = 25
                        },
                        new
                        {
                            BookCategoryId = 54,
                            BookId = "afe2affa-c3a6-42d6-97ae-ae2bb32f6252",
                            CategoryId = 26
                        },
                        new
                        {
                            BookCategoryId = 55,
                            BookId = "ba599047-7bf3-43b5-b878-0443392a092d",
                            CategoryId = 10
                        },
                        new
                        {
                            BookCategoryId = 56,
                            BookId = "cb1c497b-2822-4154-a876-23678c6406f2",
                            CategoryId = 17
                        },
                        new
                        {
                            BookCategoryId = 57,
                            BookId = "cb1c497b-2822-4154-a876-23678c6406f2",
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("InkEchoes.Models.BookImage", b =>
                {
                    b.Property<int>("BookImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookImageId"));

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookImageId");

                    b.HasIndex("BookId");

                    b.ToTable("BookImages");
                });

            modelBuilder.Entity("InkEchoes.Models.BooksAuthors", b =>
                {
                    b.Property<int>("BooksAuthorsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BooksAuthorsId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BooksAuthorsId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BooksAuthors");

                    b.HasData(
                        new
                        {
                            BooksAuthorsId = 1,
                            AuthorId = 1,
                            BookId = "e7021c6d-e793-42d3-b912-0d39faa7c111"
                        },
                        new
                        {
                            BooksAuthorsId = 2,
                            AuthorId = 2,
                            BookId = "f40f905f-5b5b-412f-a191-0fee276f44a8"
                        },
                        new
                        {
                            BooksAuthorsId = 3,
                            AuthorId = 3,
                            BookId = "953fc395-3d0c-449b-88bd-ad7f8b52a9d6"
                        },
                        new
                        {
                            BooksAuthorsId = 4,
                            AuthorId = 4,
                            BookId = "44c65b5c-1010-4ad0-8483-f19b70007c55"
                        },
                        new
                        {
                            BooksAuthorsId = 5,
                            AuthorId = 5,
                            BookId = "3369e2b3-4149-481d-ac47-1873bf4ee25c"
                        },
                        new
                        {
                            BooksAuthorsId = 6,
                            AuthorId = 6,
                            BookId = "009f9fff-a198-4f37-9824-cf3ad243bb3b"
                        },
                        new
                        {
                            BooksAuthorsId = 7,
                            AuthorId = 7,
                            BookId = "ae4225b7-b2a9-4c64-982c-e8034c09a87c"
                        },
                        new
                        {
                            BooksAuthorsId = 8,
                            AuthorId = 8,
                            BookId = "eb0cf1f2-7d8c-4f23-b69c-381363e608fc"
                        },
                        new
                        {
                            BooksAuthorsId = 9,
                            AuthorId = 9,
                            BookId = "a1a80417-3c02-44e4-abb2-d4f04b646c39"
                        },
                        new
                        {
                            BooksAuthorsId = 10,
                            AuthorId = 10,
                            BookId = "4325482a-137b-42e6-9216-3c2c3ab4cd09"
                        },
                        new
                        {
                            BooksAuthorsId = 11,
                            AuthorId = 11,
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e"
                        },
                        new
                        {
                            BooksAuthorsId = 12,
                            AuthorId = 12,
                            BookId = "bcb5111b-df8f-473a-a068-ca073df31a9e"
                        },
                        new
                        {
                            BooksAuthorsId = 13,
                            AuthorId = 13,
                            BookId = "0e89473b-ab23-43d8-b887-0936f1108413"
                        },
                        new
                        {
                            BooksAuthorsId = 14,
                            AuthorId = 14,
                            BookId = "03a9b093-fcbd-4c71-8d4c-8e68307884b8"
                        },
                        new
                        {
                            BooksAuthorsId = 15,
                            AuthorId = 15,
                            BookId = "58a645a5-e55a-40c9-b2e0-b1144f140840"
                        },
                        new
                        {
                            BooksAuthorsId = 16,
                            AuthorId = 16,
                            BookId = "f94aec15-cd4b-448f-9c57-01fa09d08ac4"
                        },
                        new
                        {
                            BooksAuthorsId = 17,
                            AuthorId = 17,
                            BookId = "f105484e-5f4b-4a9e-b659-b99cdc4ef2ba"
                        },
                        new
                        {
                            BooksAuthorsId = 18,
                            AuthorId = 18,
                            BookId = "afe2affa-c3a6-42d6-97ae-ae2bb32f6252"
                        },
                        new
                        {
                            BooksAuthorsId = 19,
                            AuthorId = 19,
                            BookId = "ba599047-7bf3-43b5-b878-0443392a092d"
                        },
                        new
                        {
                            BooksAuthorsId = 20,
                            AuthorId = 20,
                            BookId = "cb1c497b-2822-4154-a876-23678c6406f2"
                        });
                });

            modelBuilder.Entity("InkEchoes.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Science Fiction"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Non-Fiction"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Biography"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Self-Help"
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "Magical Realism"
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "Fiction"
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "Young Adult"
                        },
                        new
                        {
                            CategoryId = 14,
                            CategoryName = "Classic"
                        },
                        new
                        {
                            CategoryId = 15,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 16,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 17,
                            CategoryName = "Crime"
                        },
                        new
                        {
                            CategoryId = 18,
                            CategoryName = "Historical"
                        },
                        new
                        {
                            CategoryId = 20,
                            CategoryName = "Dystopian"
                        },
                        new
                        {
                            CategoryId = 21,
                            CategoryName = "Tragedy"
                        },
                        new
                        {
                            CategoryId = 22,
                            CategoryName = "Contemporary"
                        },
                        new
                        {
                            CategoryId = 23,
                            CategoryName = "Detective Fiction"
                        },
                        new
                        {
                            CategoryId = 24,
                            CategoryName = "Conspiracy"
                        },
                        new
                        {
                            CategoryId = 25,
                            CategoryName = "Gothic"
                        },
                        new
                        {
                            CategoryId = 26,
                            CategoryName = "Psychological"
                        });
                });

            modelBuilder.Entity("InkEchoes.Models.BookCategory", b =>
                {
                    b.HasOne("InkEchoes.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InkEchoes.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("InkEchoes.Models.BookImage", b =>
                {
                    b.HasOne("InkEchoes.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("InkEchoes.Models.BooksAuthors", b =>
                {
                    b.HasOne("InkEchoes.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InkEchoes.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
